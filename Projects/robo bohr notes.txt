We can then do a fitting with different models and compare their Accuracy, R^2 and MSE. Before this we also need to implement the GridSearchCV into the fitting of different models so that the best parameters are used.

Here bellow is what it might look like:


#GridSearchCV to search for the best model parameters 
#param_grid = {'parameter_name': [value1, value2, ...]}
#grid_search = GridSearchCV(YourModel(), param_grid, scoring='neg_mean_squared_error', cv=5)
# grid_search.fit(X_train_scaled, Y_train)
# best_params = grid_search.best_params_
# print("Best Parameters:", best_params)
# best_model = grid_search.best_estimator_
# Y_pred = best_model.predict(X_test_scaled)
# mse = mean_squared_error(Y_test, Y_pred)
# print("Best Model Mean Squared Error:", mse)